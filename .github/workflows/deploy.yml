name: Deploy Application

on:
  schedule:
    - cron: '0 0 * * *' # Executa todos os dias à meia-noite
  push:
    branches:
      - main # Ou o branch que você deseja monitorar

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t my_image_name:latest .

    - name: Push Docker image to DockerHub
      run: docker push my_image_name:latest

    - name: Prepare SSH key
      run: echo "${{ secrets.AWS_EC2_KEY }}" > deploy_key.pem

    - name: Set key permissions
      run: chmod 600 deploy_key.pem

    - name: Deploy to AWS EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i deploy_key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
          cd /path/to/your/compose/files
          docker-compose down
          docker-compose pull
          docker-compose up -d
        EOF

    - name: Send email notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Deployment Status
        to: you@example.com
        body: The deployment has been successful.
        secure: true

    - name: Check job status and send failure email
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Deployment Failed
        to: you@example.com
        body: The deployment has failed. Please check the logs for details.
        secure: true
